#ifndef WIREBOUND__ASSETS_TEXT_BITMAPS_H__H_
#define WIREBOUND__ASSETS_TEXT_BITMAPS_H__H_

#include <array>
#include <cinttypes>
#include <string_view>

namespace bitmaps {

inline constexpr int kBitmapTotalChar = 96;
inline constexpr int kBitmapRowNum = 12;
inline constexpr int kBitmapColumnNum = 8;

/// widths packed by 4 bits; how to convert:
/// float comp_width;
/// if (char_idx & 1) {
///   comp_width = static_cast<float>((widths[idx >> 1]) >> 4);
/// } else {
///   comp_width = static_cast<float>((widths[idx >> 1]) & 0x0F);
/// }
/// return static_cast<int>(comp_width * factor) + min;

struct BitmapInfo {
  std::string_view name;
  std::string_view ttf_path;
  std::array<int, 96> chars;
  int width_min;
  int height;
  int full_height;
  float width_factor;
  std::array<std::uint8_t, 48> widths;
};

inline constexpr BitmapInfo k_bmp_ascii_header = {
  "bmp_ascii_header",
  "/home/pavlo/Desktop/Wirebound_header.ttf",
  {
    32, 33, 34, 35, 36, 37, 38, 39, 
    40, 41, 42, 43, 44, 45, 46, 47, 
    48, 49, 50, 51, 52, 53, 54, 55, 
    56, 57, 58, 59, 60, 61, 62, 63, 
    64, 65, 66, 67, 68, 69, 70, 71, 
    72, 73, 74, 75, 76, 77, 78, 79, 
    80, 81, 82, 83, 84, 85, 86, 87, 
    88, 89, 90, 91, 92, 93, 94, 95, 
    96, 97, 98, 99, 100, 101, 102, 103, 
    104, 105, 106, 107, 108, 109, 110, 111, 
    112, 113, 114, 115, 116, 117, 118, 119, 
    120, 121, 122, 123, 124, 125, 126, 
  },
  16, 78, 85, 4.13333,
  {
    18, 17, 17, 17, 17, 17, 17, 17, 
    17, 17, 17, 17, 17, 17, 17, 17, 
    113, 119, 71, 116, 55, 115, 247, 119, 
    119, 119, 121, 117, 119, 23, 17, 17, 
    33, 34, 34, 34, 2, 34, 32, 34, 
    34, 34, 18, 34, 34, 18, 17, 33, 
  }
};

inline constexpr BitmapInfo k_bmp_ascii_text = {
  "bmp_ascii_text",
  "/home/pavlo/Desktop/font_text.ttf",
  {
    32, 33, 34, 35, 36, 37, 38, 39, 
    40, 41, 42, 43, 44, 45, 46, 47, 
    48, 49, 50, 51, 52, 53, 54, 55, 
    56, 57, 58, 59, 60, 61, 62, 63, 
    64, 65, 66, 67, 68, 69, 70, 71, 
    72, 73, 74, 75, 76, 77, 78, 79, 
    80, 81, 82, 83, 84, 85, 86, 87, 
    88, 89, 90, 91, 92, 93, 94, 95, 
    96, 97, 98, 99, 100, 101, 102, 103, 
    104, 105, 106, 107, 108, 109, 110, 111, 
    112, 113, 114, 115, 116, 117, 118, 119, 
    120, 121, 122, 123, 124, 125, 126, 
  },
  15, 78, 85, 2.13333,
  {
    8, 0, 8, 8, 0, 0, 0, 0, 
    136, 136, 136, 136, 136, 0, 0, 0, 
    224, 238, 238, 238, 238, 238, 238, 238, 
    238, 238, 238, 238, 238, 14, 0, 0, 
    128, 136, 136, 136, 136, 136, 136, 136, 
    136, 136, 136, 136, 136, 8, 0, 128, 
  }
};

inline constexpr BitmapInfo k_bmp_ascii_text_mask = {
  "bmp_ascii_text_mask",
  "/home/pavlo/Desktop/font_text.ttf",
  {
    32, 33, 34, 35, 36, 37, 38, 39, 
    40, 41, 42, 43, 44, 45, 46, 47, 
    48, 49, 50, 51, 52, 53, 54, 55, 
    56, 57, 58, 59, 60, 61, 62, 63, 
    64, 65, 66, 67, 68, 69, 70, 71, 
    72, 73, 74, 75, 76, 77, 78, 79, 
    80, 81, 82, 83, 84, 85, 86, 87, 
    88, 89, 90, 91, 92, 93, 94, 95, 
    96, 97, 98, 99, 100, 101, 102, 103, 
    104, 105, 106, 107, 108, 109, 110, 111, 
    112, 113, 114, 115, 116, 117, 118, 119, 
    120, 121, 122, 123, 124, 125, 126, 
  },
  15, 78, 85, 2.13333,
  {
    8, 0, 8, 8, 0, 0, 0, 0, 
    136, 136, 136, 136, 136, 0, 0, 0, 
    224, 238, 238, 238, 238, 238, 238, 238, 
    238, 238, 238, 238, 238, 14, 0, 0, 
    128, 136, 136, 136, 136, 136, 136, 136, 
    136, 136, 136, 136, 136, 8, 0, 128, 
  }
};

inline constexpr BitmapInfo k_bmp_latin_extra = {
  "bmp_latin_extra",
  "/home/pavlo/Desktop/Arial.ttf",
  {
    161, 191, 192, 193, 196, 200, 201, 204, 
    205, 206, 210, 211, 212, 214, 217, 218, 
    219, 220, 223, 224, 225, 228, 231, 232, 
    233, 236, 237, 238, 242, 243, 244, 246, 
    249, 250, 251, 252, 339, 
  },
  19, 78, 80, 3.06667,
  {
    113, 136, 136, 8, 0, 187, 187, 170, 
    170, 103, 102, 100, 6, 0, 102, 102, 
    102, 102, 31, 
  }
};

inline constexpr BitmapInfo k_bmp_cyrillic = {
  "bmp_cyrillic",
  "/home/pavlo/Desktop/Arial.ttf",
  {
    1025, 1028, 1030, 1031, 1040, 1041, 1042, 1043, 
    1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 
    1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 
    1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 
    1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 
    1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 
    1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 
    1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 
    1100, 1101, 1102, 1103, 1105, 1108, 1110, 1111, 
    1168, 1169, 
  },
  15, 78, 80, 3.66667,
  {
    152, 17, 136, 104, 136, 125, 153, 134, 
    155, 154, 152, 119, 138, 137, 221, 202, 
    152, 159, 102, 38, 102, 72, 102, 100, 
    105, 102, 86, 84, 91, 86, 187, 151, 
    85, 106, 86, 16, 53, 
  }
};

inline constexpr BitmapInfo k_bmp_chinese = {
  "bmp_chinese",
  "/home/pavlo/Desktop/NotoSansSC-VariableFont_wght.ttf",
  {
    12289, 12290, 12354, 12356, 12362, 12363, 12364, 12365, 
    12369, 12371, 12373, 12375, 12377, 12379, 12381, 12383, 
    12387, 12388, 12390, 12391, 12392, 12394, 12395, 12398, 
    12399, 12403, 12409, 12414, 12415, 12418, 12424, 12425, 
    12426, 12427, 12428, 12434, 12435, 12450, 12452, 12455, 
    12463, 12467, 12471, 12473, 12475, 12483, 12486, 12488, 
    12489, 12501, 12511, 12513, 12514, 12522, 12523, 12524, 
    12525, 12531, 12540, 19968, 19979, 20184, 20197, 20316, 
    20808, 20840, 20869, 21015, 21336, 21462, 21487, 21512, 
    21516, 22580, 22793, 23384, 23450, 23550, 24207, 24471, 
    24615, 25805, 25918, 26356, 26360, 26399, 29983, 29992, 
    30330, 30340, 33021, 34892, 35299, 36011, 36796, 38918, 
  },
  53, 78, 78, 0,
  {
    0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 
  }
};

inline constexpr BitmapInfo k_bmp_japanese = {
  "bmp_japanese",
  "/home/pavlo/Desktop/NotoSansJP-VariableFont_wght.ttf",
  {
    12290, 19968, 19978, 19979, 19981, 19982, 19988, 20010, 
    20013, 20026, 20043, 20110, 20197, 20250, 20316, 20363, 
    20381, 20462, 20540, 20648, 20808, 20837, 20840, 20851, 
    20854, 20869, 20889, 20986, 21015, 21017, 21040, 21069, 
    21103, 21152, 21333, 21407, 21457, 21487, 21516, 21518, 
    21644, 22120, 22312, 22914, 23376, 23384, 23427, 23450, 
    23545, 24207, 24471, 24847, 25110, 25152, 25805, 25913, 
    25918, 25968, 26080, 26159, 26377, 26631, 27492, 27493, 
    28040, 29420, 29616, 29983, 29992, 30340, 31243, 32447, 
    32773, 32780, 33021, 33509, 33719, 34892, 34987, 35201, 
    35265, 35266, 35775, 35835, 36153, 36182, 36733, 36825, 
    36827, 37322, 38382, 39034, 65288, 65289, 65292, 65306, 
  },
  53, 78, 78, 0,
  {
    0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 
  }
};

inline constexpr BitmapInfo k_bmp_korean = {
  "bmp_korean",
  "/home/pavlo/Desktop/NotoSansKR-VariableFont_wght.ttf",
  {
    169, 8220, 8221, 8228, 44032, 44036, 44053, 44054, 
    44060, 44172, 44201, 44256, 44277, 44284, 44288, 44368, 
    44397, 44428, 44553, 44592, 45453, 45716, 45796, 45800, 
    45817, 45824, 45908, 46020, 46041, 46076, 47196, 47308, 
    47532, 47548, 47566, 47568, 47732, 47924, 47928, 48124, 
    48143, 48148, 48155, 48156, 48173, 48512, 49324, 49328, 
    49436, 49688, 49884, 50629, 50640, 50756, 50896, 50900, 
    50948, 50977, 51004, 51008, 51012, 51032, 51060, 51068, 
    51080, 51088, 51089, 51109, 51116, 51200, 51204, 51221, 
    51452, 51613, 51648, 51652, 52280, 52397, 52572, 52628, 
    52629, 52712, 53571, 54252, 54408, 54532, 54616, 54617, 
    54620, 54624, 54632, 54644, 54664, 54868, 54869, 54876, 
  },
  20, 78, 78, 2.2,
  {
    10, 240, 221, 221, 221, 221, 221, 221, 
    221, 221, 221, 221, 221, 221, 221, 221, 
    221, 221, 221, 221, 221, 221, 221, 221, 
    221, 221, 221, 221, 221, 221, 221, 221, 
    221, 221, 221, 221, 221, 221, 221, 221, 
    221, 221, 221, 221, 221, 221, 221, 221, 
  }
};

} // namespace bitmaps

#endif  // WIREBOUND__ASSETS_TEXT_BITMAPS_H__H_
